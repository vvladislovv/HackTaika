#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è
set -e

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${GREEN}üöÄ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π HackTaika...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...${NC}"
command -v docker >/dev/null 2>&1 || { echo -e "${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"; exit 1; }
command -v docker-compose >/dev/null 2>&1 || { echo -e "${RED}‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"; exit 1; }

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
ENV=${1:-production}
echo -e "${YELLOW}–û–∫—Ä—É–∂–µ–Ω–∏–µ: ${ENV}${NC}"

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
echo -e "${YELLOW}üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ë–î...${NC}"
if docker ps | grep -q hacktaika-db; then
    mkdir -p ./backups
    BACKUP_FILE="./backups/pre_deploy_$(date +%Y%m%d_%H%M%S).sql"
    docker exec hacktaika-db pg_dump -U hacktaika hacktaika_db > "$BACKUP_FILE"
    echo -e "${GREEN}‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: $BACKUP_FILE${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ë–î –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –±—ç–∫–∞–ø${NC}"
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo -e "${YELLOW}‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
if [ "$ENV" = "production" ]; then
    docker-compose -f docker-compose.prod.yml down
else
    docker-compose down
fi

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
echo -e "${YELLOW}üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤...${NC}"
docker image prune -f

# –°–±–æ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤
echo -e "${YELLOW}üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤...${NC}"
if [ "$ENV" = "production" ]; then
    docker-compose -f docker-compose.prod.yml build --no-cache
else
    docker-compose build --no-cache
fi

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${YELLOW}‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
if [ "$ENV" = "production" ]; then
    docker-compose -f docker-compose.prod.yml up -d
else
    docker-compose up -d
fi

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –ë–î
echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ë–î...${NC}"
sleep 10

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo -e "${YELLOW}üì¶ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î...${NC}"
if [ "$ENV" = "production" ]; then
    docker exec hacktaika-frontend-prod npx prisma db push
else
    docker exec hacktaika-frontend npx prisma db push
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
echo -e "${YELLOW}üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
sleep 5

if curl -sf http://localhost:3000/api/health > /dev/null; then
    echo -e "${GREEN}‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
else
    echo -e "${RED}‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"
    exit 1
fi

# –£—Å–ø–µ—à–Ω—ã–π –¥–µ–ø–ª–æ–π
echo -e "${GREEN}‚ú® –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!${NC}"
echo -e "${GREEN}üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞: http://localhost:3000${NC}"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏
echo -e "${YELLOW}üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:${NC}"
if [ "$ENV" = "production" ]; then
    docker-compose -f docker-compose.prod.yml logs --tail=50
else
    docker-compose logs --tail=50
fi
