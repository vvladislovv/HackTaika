'use client'

import { useAppleTextReveal } from '@/hooks/useScrollAnimation'
import { motion } from 'framer-motion'

const text = `–ú—ã –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π 
–∏ –º–æ–±–∏–ª—å–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π. –ù–∞—à–∞ –º–∏—Å—Å–∏—è ‚Äî —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ—à–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ 
–∑–∞–¥–∞—á–∏ –±–∏–∑–Ω–µ—Å–∞ –∏ –ø—Ä–∏–Ω–æ—Å—è—Ç —Ü–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ 
—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã—Ö –∏ –Ω–∞–¥—ë–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π.`

export function Description() {
  const { ref, revealProgress } = useAppleTextReveal()

  const words = text.split(' ')

  return (
    <section id="description" className="py-32 bg-white">
      <div className="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
        <div ref={ref} className="text-3xl md:text-5xl leading-relaxed font-medium">
          {words.map((word, index) => {
            // –ë–æ–ª–µ–µ –ø–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∫–∞–∫ —É Apple
            const startReveal = index / words.length
            const endReveal = (index + 1) / words.length
            
            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞
            const wordProgress = Math.max(0, Math.min(1, 
              (revealProgress - startReveal) / (endReveal - startReveal)
            ))
            
            // –ü–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –æ—Ç —Å–µ—Ä–æ–≥–æ –∫ —á–µ—Ä–Ω–æ–º—É
            const grayValue = Math.round(156 - (156 - 23) * wordProgress)
            
            return (
              <span
                key={index}
                style={{
                  color: `rgb(${grayValue}, ${grayValue}, ${grayValue})`,
                  transition: 'color 0.6s cubic-bezier(0.4, 0, 0.2, 1)',
                  opacity: 0.4 + 0.6 * wordProgress,
                }}
                className="inline-block mr-3"
              >
                {word}
              </span>
            )
          })}
        </div>

        <div className="mt-20 grid grid-cols-1 md:grid-cols-3 gap-8">
          {[
            {
              title: '–û–ø—ã—Ç',
              description: '–ë–æ–ª–µ–µ 5 –ª–µ—Ç –≤ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏',
              icon: 'üéØ',
            },
            {
              title: '–ü—Ä–æ–µ–∫—Ç—ã',
              description: '100+ —É—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤',
              icon: 'üöÄ',
            },
            {
              title: '–ö–ª–∏–µ–Ω—Ç—ã',
              description: '–î–æ–≤–æ–ª—å–Ω—ã–µ –∑–∞–∫–∞–∑—á–∏–∫–∏',
              icon: '‚≠ê',
            },
          ].map((item, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true, amount: 0.8 }}
              transition={{ delay: index * 0.2, duration: 0.6 }}
              className="text-center"
            >
              <motion.div
                whileHover={{ scale: 1.05 }}
                className="p-8 rounded-2xl bg-cream hover:bg-orange/10 transition-all duration-300 hover:shadow-xl"
              >
                <motion.div 
                  className="text-5xl mb-4"
                  initial={{ scale: 0, rotate: -180 }}
                  whileInView={{ scale: 1, rotate: 0 }}
                  viewport={{ once: true }}
                  transition={{ delay: index * 0.2 + 0.3, type: 'spring', stiffness: 200 }}
                >
                  {item.icon}
                </motion.div>
                <motion.h3 
                  className="text-2xl font-bold text-dark-brown mb-2"
                  initial={{ opacity: 0 }}
                  whileInView={{ opacity: 1 }}
                  viewport={{ once: true }}
                  transition={{ delay: index * 0.2 + 0.5 }}
                >
                  {item.title}
                </motion.h3>
                <motion.p 
                  className="text-brown"
                  initial={{ opacity: 0 }}
                  whileInView={{ opacity: 1 }}
                  viewport={{ once: true }}
                  transition={{ delay: index * 0.2 + 0.6 }}
                >
                  {item.description}
                </motion.p>
              </motion.div>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  )
}

