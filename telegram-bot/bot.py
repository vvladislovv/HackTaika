import os
import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from dotenv import load_dotenv

load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
ADMIN_ID = int(os.getenv('TELEGRAM_ADMIN_ID'))
WEBAPP_URL = os.getenv('WEBAPP_URL')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


@dp.message(Command('start'))
async def cmd_start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –¥–ª—è Mini App"""
    # –î–ª—è Mini App Telegram –¥–æ–ø—É—Å–∫–∞–µ—Ç –¢–û–õ–¨–ö–û HTTPS URL. –î–ª—è http (–ª–æ–∫–∞–ª—å–Ω–æ) –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—É—é —Å—Å—ã–ª–∫—É
    buttons_row = []
    if WEBAPP_URL and WEBAPP_URL.lower().startswith('https://'):
        buttons_row.append(
            InlineKeyboardButton(
                text="üöÄ –û—Ç–∫—Ä—ã—Ç—å HackTaika",
                web_app=WebAppInfo(url=WEBAPP_URL)
            )
        )
    elif WEBAPP_URL:
        buttons_row.append(
            InlineKeyboardButton(
                text="üåê –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç",
                url=WEBAPP_URL
            )
        )

    keyboard = InlineKeyboardMarkup(inline_keyboard=[[btn] for btn in buttons_row] or [])
    
    welcome_text = (
        "üëã <b>–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ HackTaika!</b>\n\n"
        "üéØ –ú—ã —Å–æ–∑–¥–∞–µ–º –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è:\n"
        "‚Ä¢ –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n"
        "‚Ä¢ –ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n"
        "‚Ä¢ Telegram Mini Apps\n"
        "‚Ä¢ CRM —Å–∏—Å—Ç–µ–º—ã\n"
        "‚Ä¢ E-commerce\n\n"
        "üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—à —Å–∞–π—Ç –∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É!"
    )
    
    await message.answer(
        welcome_text,
        reply_markup=keyboard,
        parse_mode='HTML'
    )


async def send_order_notification(order_data: dict):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –ø—Ä–æ—Å—Ç–æ–π –∑–∞—è–≤–∫–µ"""
    try:
        message_text = (
            "üîî <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!</b>\n\n"
            f"üë§ <b>–ò–º—è:</b> {order_data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"üìß <b>Email:</b> {order_data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {order_data.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        )
        
        if order_data.get('telegram'):
            message_text += f"üí¨ <b>Telegram:</b> {order_data.get('telegram')}\n"
        
        message_text += f"\nüìù <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>\n{order_data.get('message', '–ë–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è')}\n"
        message_text += f"\n‚è∞ <b>–í—Ä–µ–º—è:</b> {order_data.get('createdAt', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}"
        
        await bot.send_message(
            chat_id=ADMIN_ID,
            text=message_text,
            parse_mode='HTML'
        )
        logging.info(f"Order notification sent to admin {ADMIN_ID}")
    except Exception as e:
        logging.error(f"Error sending order notification: {e}")


async def send_application_notification(app_data: dict):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –ø–æ–¥—Ä–æ–±–Ω–æ–π –∑–∞—è–≤–∫–µ"""
    try:
        message_text = (
            "üéØ <b>–ù–æ–≤–∞—è –ø–æ–¥—Ä–æ–±–Ω–∞—è –∑–∞—è–≤–∫–∞!</b>\n\n"
            "<b>üìã –ö–û–ù–¢–ê–ö–¢–ù–´–ï –î–ê–ù–ù–´–ï</b>\n"
            f"üë§ <b>–ò–º—è:</b> {app_data.get('fullName', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"üìß <b>Email:</b> {app_data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {app_data.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        )
        
        if app_data.get('telegram'):
            message_text += f"üí¨ <b>Telegram:</b> {app_data.get('telegram')}\n"
        
        message_text += (
            f"\n<b>üíº –û –ü–†–û–ï–ö–¢–ï</b>\n"
            f"üè∑ <b>–¢–∏–ø:</b> {app_data.get('projectType', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"üéØ <b>–ü—Ä–æ–±–ª–µ–º–∞:</b> {app_data.get('projectProblem', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
            f"üë• <b>–ê—É–¥–∏—Ç–æ—Ä–∏—è:</b> {app_data.get('targetAudience', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
            f"\n<b>üí∞ –ë–Æ–î–ñ–ï–¢ –ò –°–†–û–ö–ò</b>\n"
            f"üíµ <b>–ë—é–¥–∂–µ—Ç:</b> {app_data.get('budget', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"‚è± <b>–î–µ–¥–ª–∞–π–Ω:</b> {app_data.get('deadline', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"\n<b>üìù –û–ü–ò–°–ê–ù–ò–ï</b>\n"
            f"{app_data.get('description', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        )
        
        if app_data.get('additionalInfo'):
            message_text += f"\n<b>‚ÑπÔ∏è –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û</b>\n{app_data.get('additionalInfo')}\n"
        
        message_text += f"\n‚è∞ <b>–í—Ä–µ–º—è:</b> {app_data.get('createdAt', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}"
        
        await bot.send_message(
            chat_id=ADMIN_ID,
            text=message_text,
            parse_mode='HTML'
        )
        logging.info(f"Application notification sent to admin {ADMIN_ID}")
    except Exception as e:
        logging.error(f"Error sending application notification: {e}")


async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    logging.info("Starting Telegram bot...")
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
