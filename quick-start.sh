#!/bin/bash

# –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç HackTaika
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç

set -e

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                                       ‚ïë"
echo "‚ïë        HackTaika Quick Start          ‚ïë"
echo "‚ïë                                       ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...${NC}"
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop: https://www.docker.com/products/docker-desktop${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Make
if ! command -v make &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Make –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ë—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä—è–º—ã–µ –∫–æ–º–∞–Ω–¥—ã Docker${NC}"
    USE_MAKE=false
else
    echo -e "${GREEN}‚úÖ Make —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    USE_MAKE=true
fi

echo ""
echo -e "${YELLOW}üìã –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:${NC}"
echo "  1) –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞)"
echo "  2) Development —Ä–µ–∂–∏–º"
echo "  3) Production —Ä–µ–∂–∏–º"
echo "  4) –¢–æ–ª—å–∫–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å (–µ—Å–ª–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ)"
echo ""
read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [1-4]: " choice

case $choice in
    1)
        echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏...${NC}"
        if [ "$USE_MAKE" = true ]; then
            make install
        else
            echo -e "${YELLOW}–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤...${NC}"
            docker-compose build
            echo -e "${YELLOW}–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
            docker-compose up -d
            echo -e "${YELLOW}–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ë–î...${NC}"
            sleep 10
            echo -e "${YELLOW}–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å—Ö–µ–º—ã –ë–î...${NC}"
            docker exec hacktaika-frontend npx prisma db push
        fi
        ;;
    2)
        echo -e "${GREEN}üîß –ó–∞–ø—É—Å–∫ –≤ Development —Ä–µ–∂–∏–º–µ...${NC}"
        if [ "$USE_MAKE" = true ]; then
            make dev
        else
            docker-compose up -d
        fi
        ;;
    3)
        echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –≤ Production —Ä–µ–∂–∏–º–µ...${NC}"
        if [ "$USE_MAKE" = true ]; then
            make prod
        else
            docker-compose -f docker-compose.prod.yml up -d
        fi
        ;;
    4)
        echo -e "${GREEN}‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
        docker-compose up -d
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä${NC}"
        exit 1
        ;;
esac

echo ""
echo -e "${GREEN}‚ú® –ì–æ—Ç–æ–≤–æ!${NC}"
echo ""
echo -e "${BLUE}üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
if [ "$USE_MAKE" = true ]; then
    echo "  make logs          - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "  make health        - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ"
    echo "  make db-studio     - –û—Ç–∫—Ä—ã—Ç—å Prisma Studio"
    echo "  make admin         - –°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    echo "  make down          - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
    echo "  make help          - –í—Å–µ –∫–æ–º–∞–Ω–¥—ã"
else
    echo "  docker-compose logs -f              - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "  docker-compose ps                   - –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "  docker exec -it hacktaika-frontend npx prisma studio  - Prisma Studio"
    echo "  docker-compose down                 - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
fi
echo ""
echo -e "${GREEN}üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ:${NC}"
echo "  Frontend: http://localhost:3000"
echo "  Admin:    http://localhost:3000/admin"
echo ""
echo -e "${YELLOW}üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: AUTOMATION.md${NC}"
echo ""
